{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-f","title":"KIT-F","text":"<p>Bruno Locatelli</p> <p>Julia Diniz</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 18/03/2025</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"projeto/main/","title":"Projeto","text":""},{"location":"projeto/main/#objetivo","title":"Objetivo","text":"<p>Aqui vai o objetivo macro do roteiro. Por que estamos fazendo o que estamos fazendo?</p>"},{"location":"projeto/main/#montagem-do-roteiro","title":"Montagem do Roteiro","text":"<p>Os pontos \"tarefas\" s\u00e3o os passos que devem ser seguidos para a realiza\u00e7\u00e3o do roteiro. Eles devem ser claros e objetivos. Com evid\u00eancias claras de que foram realizados.</p>"},{"location":"projeto/main/#tarefa-1","title":"Tarefa 1","text":"<p>Instalando o MAAS:</p> sudo snap install maas --channel=3.5/Stable <p></p> <p>Dashboard do MAAS</p> <p>Conforme ilustrado acima, a tela inicial do MAAS apresenta um dashboard com informa\u00e7\u00f5es sobre o estado atual dos servidores gerenciados. O dashboard \u00e9 composto por diversos pain\u00e9is, cada um exibindo informa\u00e7\u00f5es sobre um aspecto espec\u00edfico do ambiente gerenciado. Os pain\u00e9is podem ser configurados e personalizados de acordo com as necessidades do usu\u00e1rio.</p>"},{"location":"projeto/main/#tarefa-2","title":"Tarefa 2","text":""},{"location":"projeto/main/#app","title":"App","text":""},{"location":"projeto/main/#tarefa-1_1","title":"Tarefa 1","text":""},{"location":"projeto/main/#tarefa-2_1","title":"Tarefa 2","text":"<p>Exemplo de diagrama</p> <pre><code>architecture-beta\n    group api(cloud)[API]\n\n    service db(database)[Database] in api\n    service disk1(disk)[Storage] in api\n    service disk2(disk)[Storage] in api\n    service server(server)[Server] in api\n\n    db:L -- R:server\n    disk1:T -- B:server\n    disk2:T -- B:db</code></pre> <p>Mermaid</p>"},{"location":"projeto/main/#questionario-projeto-ou-plano","title":"Question\u00e1rio, Projeto ou Plano","text":"<p>Esse se\u00e7\u00e3o deve ser preenchida apenas se houver demanda do roteiro.</p>"},{"location":"projeto/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Quais as dificuldades encontradas? O que foi mais f\u00e1cil? O que foi mais dif\u00edcil?</p>"},{"location":"projeto/main/#conclusao","title":"Conclus\u00e3o","text":"<p>O que foi poss\u00edvel concluir com a realiza\u00e7\u00e3o do roteiro?</p>"},{"location":"roteiro1/main/","title":"Roteiro 1 - Deploy de Django em Nuvem Bare-Metal","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>O objetivo deste roteiro \u00e9 aprender a configurar e gerenciar uma aplica\u00e7\u00e3o Django rodando em infraestrutura bare-metal utilizando o MaaS (Metal as a Service). O roteiro aborda desde a instala\u00e7\u00e3o manual do banco de dados e da aplica\u00e7\u00e3o Django at\u00e9 a automa\u00e7\u00e3o do deploy utilizando o Ansible e a configura\u00e7\u00e3o de um proxy reverso para balanceamento de carga.</p>"},{"location":"roteiro1/main/#tarefa-1-banco-de-dados-postgresql","title":"Tarefa 1 - Banco de Dados PostgreSQL","text":"<ol> <li> <p>Implanta\u00e7\u00e3o do Ubuntu 22.04 no <code>server1</code> via MAAS.</p> </li> <li> <p>Instala\u00e7\u00e3o do PostgreSQL e configura\u00e7\u00e3o para aceitar conex\u00f5es remotas.</p> </li> <li> <p>Para verificar se o PostgreSQL est\u00e1 rodando corretamente, utilizamos o comando:</p> </li> </ol> systemctl status postgresql <p></p> <p>Verifica\u00e7\u00e3o do status do servi\u00e7o PostgreSQL: ativo e habilitado. </p> <ol> <li>Para garantir que o banco de dados est\u00e1 acess\u00edvel na pr\u00f3pria m\u00e1quina, utilizamos:</li> </ol> telnet localhost 5432ifconfigufw allow 5432/tcpjournalctl -u postgresql <ul> <li><code>telnet localhost 5432</code>: verifica se a porta est\u00e1 respondendo localmente</li> <li><code>ifconfig</code>: confirma o IP atribu\u00eddo \u00e0 interface de rede da m\u00e1quina.</li> <li><code>ufw allow 5432/tcp</code>: identifica o IP da interface de rede.</li> <li><code>journalctl -u postgresql</code>: mostra os logs do servi\u00e7o PostgreSQL.</li> </ul> <p></p> <p>Teste de acessibilidade ao banco de dados na pr\u00f3pria m\u00e1quina.</p> <ol> <li> <p>Para validar o acesso a partir da m\u00e1quina MAIN:</p> </li> <li> <p><code>telnet &lt;ip-do-server1&gt; 5432</code>: verifica se \u00e9 poss\u00edvel se conectar ao banco remotamente a partir de outra m\u00e1quina.</p> </li> <li><code>curl &lt;ip-do-server1&gt;:5432</code> ou <code>wget &lt;ip-do-server1&gt;:5432</code>: podem ser usados para verificar se h\u00e1 alguma resposta na porta TCP 5432, embora n\u00e3o sejam ideais para testar servi\u00e7os PostgreSQL, pois esse protocolo n\u00e3o responde como HTTP.</li> </ol> <p></p> <p>Por fim, para saber em qual porta o PostgreSQL est\u00e1 escutando:</p> <ul> <li><code>ss -tlpn | grep postgres</code>: mostra as portas TCP abertas, os processos escutando e confirma que o PostgreSQL est\u00e1 ouvindo na porta 5432.</li> </ul> <p></p>"},{"location":"roteiro1/main/#tarefa-2-dashboard-do-maas-e-configuracao-das-maquinas","title":"Tarefa 2 - Dashboard do MAAS e Configura\u00e7\u00e3o das M\u00e1quinas","text":"<ol> <li> <p>Exibir o dashboard do MAAS com as m\u00e1quinas cadastradas. </p> </li> <li> <p>Exibir a aba Images, listando as imagens sincronizadas no MAAS. </p> </li> <li> <p>Mostrar os detalhes dos testes de hardware de cada servidor.  </p> </li> <li><code>server1</code>: </li> <li><code>server2</code>: </li> <li><code>server3</code>: </li> <li><code>server4</code>: </li> <li><code>server5</code>: </li> </ol>"},{"location":"roteiro1/main/#tarefa-3-deploy-manual-da-aplicacao-django","title":"Tarefa 3 - Deploy Manual da Aplica\u00e7\u00e3o Django","text":"<ol> <li> <p>Realizar deploy manual da aplica\u00e7\u00e3o no <code>server2</code>. </p> </li> <li> <p>Configurar o banco de dados e testar a conex\u00e3o.  </p> </li> <li> <p>Validar o funcionamento do Django Admin. </p> </li> </ol>"},{"location":"roteiro1/main/#tarefa-4-deploy-automatizado-com-ansible","title":"Tarefa 4 - Deploy Automatizado com Ansible","text":"<ol> <li> <p>Implanta\u00e7\u00e3o do <code>server3</code> via MAAS. </p> </li> <li> <p>Utiliza\u00e7\u00e3o do Ansible para automa\u00e7\u00e3o do deploy da aplica\u00e7\u00e3o.</p> </li> <li> <p>Valida\u00e7\u00e3o do acesso ao Django Admin no <code>server2</code>. </p> </li> <li> <p>Valida\u00e7\u00e3o do acesso ao Django Admin no <code>server3</code>. </p> </li> </ol>"},{"location":"roteiro1/main/#tarefa-5-proxy-reverso-com-nginx","title":"Tarefa 5 - Proxy Reverso com Nginx","text":"<ol> <li> <p>Implanta\u00e7\u00e3o do <code>server4</code> via MAAS. </p> </li> <li> <p>Configura\u00e7\u00e3o do Nginx como proxy reverso para balanceamento de carga.</p> </li> <li> <p>Modifica\u00e7\u00e3o da resposta da aplica\u00e7\u00e3o para diferenciar <code>server2</code> e <code>server3</code>.</p> </li> <li> <p>Teste do Nginx redirecionando para <code>server2</code>. </p> </li> <li> <p>Teste do Nginx redirecionando para <code>server3</code>. </p> </li> </ol>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Dificuldades:</li> <li>Configura\u00e7\u00e3o do MaaS CLI para deploy das m\u00e1quinas.</li> <li>Entendimento da configura\u00e7\u00e3o do proxy reverso com Nginx.</li> <li> <p>Automa\u00e7\u00e3o do deploy usando Ansible.</p> </li> <li> <p>Facilidades:</p> </li> <li>Instala\u00e7\u00e3o do banco de dados PostgreSQL.</li> <li>Uso de tunelamento SSH para acessar o Django admin.</li> </ul>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>Este roteiro demonstrou a import\u00e2ncia da automa\u00e7\u00e3o na implanta\u00e7\u00e3o de aplica\u00e7\u00f5es em infraestrutura bare-metal. O uso do MaaS facilitou a orquestra\u00e7\u00e3o das m\u00e1quinas, enquanto o Ansible permitiu a padroniza\u00e7\u00e3o e automa\u00e7\u00e3o do deploy. O proxy reverso com Nginx garantiu alta disponibilidade e balanceamento de carga, tornando o sistema mais robusto e escal\u00e1vel.</p> <p>Agora o relat\u00f3rio est\u00e1 formatado exatamente como voc\u00ea queria! Se precisar de mais ajustes, s\u00f3 avisar. \ud83d\ude80\ud83d\ude03</p>"}]}