{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-f","title":"KIT-F","text":"<p>Bruno Locatelli</p> <p>Julia Diniz</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 18/03/2025</li> <li> Roteiro 2</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"roteiro1/main/","title":"Roteiro 1 - Deploy de Django em Nuvem Bare-Metal","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>O objetivo deste roteiro \u00e9 aprender a configurar e gerenciar uma aplica\u00e7\u00e3o Django rodando em infraestrutura bare-metal utilizando o MaaS (Metal as a Service). O roteiro aborda desde a instala\u00e7\u00e3o manual do banco de dados e da aplica\u00e7\u00e3o Django at\u00e9 a automa\u00e7\u00e3o do deploy utilizando o Ansible e a configura\u00e7\u00e3o de um proxy reverso para balanceamento de carga.</p>"},{"location":"roteiro1/main/#tarefa-1-banco-de-dados-postgresql","title":"Tarefa 1 - Banco de Dados PostgreSQL","text":"<ul> <li> <p>Implanta\u00e7\u00e3o do Ubuntu 22.04 no <code>server1</code> via MAAS.</p> </li> <li> <p>Instala\u00e7\u00e3o do PostgreSQL e configura\u00e7\u00e3o para aceitar conex\u00f5es remotas.</p> </li> </ul>"},{"location":"roteiro1/main/#1-para-verificar-se-o-postgresql-esta-rodando-corretamente-utilizamos-o-comando","title":"1. Para verificar se o PostgreSQL est\u00e1 rodando corretamente, utilizamos o comando:","text":"systemctl status postgresql <p>Imagem 1 - Verifica\u00e7\u00e3o do status do PostgreSQL via systemctl. </p>"},{"location":"roteiro1/main/#2-para-garantir-que-o-banco-de-dados-esta-acessivel-na-propria-maquina-utilizamos","title":"2. Para garantir que o banco de dados est\u00e1 acess\u00edvel na pr\u00f3pria m\u00e1quina, utilizamos:","text":"telnet localhost 5432ifconfigufw allow 5432/tcpjournalctl -u postgresql <ul> <li><code>telnet localhost 5432</code>: verifica se a porta est\u00e1 respondendo localmente</li> <li><code>ifconfig</code>: confirma o IP atribu\u00eddo \u00e0 interface de rede da m\u00e1quina.</li> <li><code>ufw allow 5432/tcp</code>: identifica o IP da interface de rede.</li> <li><code>journalctl -u postgresql</code>: mostra os logs do servi\u00e7o PostgreSQL.</li> </ul> <p>Imagem 2 - Teste de conex\u00e3o local ao PostgreSQL.</p>"},{"location":"roteiro1/main/#3-para-validar-o-acesso-a-partir-da-maquina-main","title":"3. Para validar o acesso a partir da m\u00e1quina MAIN:","text":"telnet &lt;ip-do-server1&gt; 5432curl &lt;ip-do-server1&gt;:5432wget &lt;ip-do-server1&gt;:5432 <ul> <li><code>telnet &lt;ip-do-server1&gt; 5432</code>: verifica se \u00e9 poss\u00edvel se conectar ao banco remotamente a partir de outra m\u00e1quina.</li> <li><code>curl &lt;ip-do-server1&gt;:5432</code> ou <code>wget &lt;ip-do-server1&gt;:5432</code>: podem ser usados para verificar se h\u00e1 alguma resposta na porta TCP 5432, embora n\u00e3o sejam ideais para testar servi\u00e7os PostgreSQL, pois esse protocolo n\u00e3o responde como HTTP.</li> </ul> <p>Imagem 3 - Teste de acesso remoto ao PostgreSQL.</p>"},{"location":"roteiro1/main/#4-por-fim-para-saber-em-qual-porta-o-postgresql-esta-escutando","title":"4. Por fim, para saber em qual porta o PostgreSQL est\u00e1 escutando:","text":"ss -tlpn | grep postgres <ul> <li><code>ss -tlpn | grep postgres</code>: mostra as portas TCP abertas, os processos escutando e confirma que o PostgreSQL est\u00e1 ouvindo na porta 5432.</li> </ul> <p>Imagem 4 - Verifica\u00e7\u00e3o da porta utilizada pelo PostgreSQL.</p>"},{"location":"roteiro1/main/#tarefa-2-dashboard-do-maas-e-testes-nas-maquinas","title":"Tarefa 2 - Dashboard do MAAS e Testes nas M\u00e1quinas","text":"<p>Nesta etapa realizamos a verifica\u00e7\u00e3o do ambiente no MAAS, observando as m\u00e1quinas dispon\u00edveis, imagens sincronizadas e os testes de hardware realizados em cada m\u00e1quina.</p>"},{"location":"roteiro1/main/#1-visualizacao-do-dashboard-do-maas","title":"1. Visualiza\u00e7\u00e3o do Dashboard do MAAS.","text":"<p>Atrav\u00e9s da interface web do MAAS, \u00e9 poss\u00edvel visualizar todas as m\u00e1quinas provisionadas e seus respectivos IPs.</p> <p></p> <p>Imagem 5 - Dashboard do MAAS exibindo as m\u00e1quinas configuradas.</p>"},{"location":"roteiro1/main/#2-verificacao-das-imagens-disponiveis","title":"2. Verifica\u00e7\u00e3o das imagens dispon\u00edveis.","text":"<p>No MAAS, as imagens sincronizadas ficam dispon\u00edveis para deploy nas m\u00e1quinas.</p> <p></p> <p>Imagem 6 - Imagens sincronizadas no MAAS.</p>"},{"location":"roteiro1/main/#3-verificacao-dos-testes-de-hardware-commissioning-em-cada-maquina","title":"3. Verifica\u00e7\u00e3o dos testes de hardware (Commissioning) em cada m\u00e1quina.","text":"<p>Em cada m\u00e1quina do MAAS foram realizados testes de hardware para garantir que est\u00e3o operando corretamente. O resultado desses testes pode ser visualizado individualmente.</p> <p>M\u00e1quina <code>server1</code>:</p> <p></p> <p>Imagem 7 - Testes de hardware com status OK na m\u00e1quina server1.</p> <p>M\u00e1quina <code>server2</code>:</p> <p></p> <p>Imagem 8 - Testes de hardware com status OK na m\u00e1quina server2.</p> <p>M\u00e1quina <code>server3</code>:</p> <p></p> <p>Imagem 9 - Testes de hardware com status OK na m\u00e1quina server3.</p> <p>M\u00e1quina <code>server4</code>:</p> <p></p> <p>Imagem 10 - Testes de hardware com status OK na m\u00e1quina server4.</p> <p>M\u00e1quina <code>server5</code>:</p> <p></p> <p>Imagem 11 - Testes de hardware com status OK na m\u00e1quina server5.</p>"},{"location":"roteiro1/main/#tarefa-3-deploy-manual-da-aplicacao-django","title":"Tarefa 3 - Deploy Manual da Aplica\u00e7\u00e3o Django","text":"<p>Nesta tarefa foi realizado o deploy manual da aplica\u00e7\u00e3o Django em uma m\u00e1quina <code>server2</code> provisionada no MAAS, utilizando o banco de dados PostgreSQL previamente instalado no <code>server1</code>.</p>"},{"location":"roteiro1/main/#1-visualizacao-do-dashboard-do-maas-com-as-maquinas-server1-e-server2","title":"1. Visualiza\u00e7\u00e3o do Dashboard do MAAS com as m\u00e1quinas <code>server1</code> e <code>server2</code>.","text":"<p>No Dashboard do MAAS \u00e9 poss\u00edvel visualizar as duas m\u00e1quinas (<code>server1</code> e <code>server2</code>) ativas e com seus respectivos IPs atribu\u00eddos.</p> <p></p> <p>Imagem 12 - Dashboard do MAAS com as m\u00e1quinas server1 e server2 configuradas.</p>"},{"location":"roteiro1/main/#2-teste-de-acesso-a-aplicacao-django-no-server2","title":"2. Teste de acesso \u00e0 aplica\u00e7\u00e3o Django no <code>server2</code>.","text":"<p>Ap\u00f3s o deploy manual da aplica\u00e7\u00e3o, foi realizado o acesso ao Django Admin para comprovar o funcionamento correto da aplica\u00e7\u00e3o rodando no <code>server2</code>.</p> <p></p> <p>Imagem 13 - Acesso ao painel Django Admin da aplica\u00e7\u00e3o no server2.</p>"},{"location":"roteiro1/main/#3-implementacao-manual-da-aplicacao-django-e-banco-de-dados","title":"3. Implementa\u00e7\u00e3o manual da aplica\u00e7\u00e3o Django e banco de dados.","text":"<p>O processo de implementa\u00e7\u00e3o manual foi realizado em duas etapas:</p>"},{"location":"roteiro1/main/#banco-de-dados-server1","title":"Banco de Dados (server1):","text":"<ul> <li>Instala\u00e7\u00e3o do PostgreSQL.</li> <li>Cria\u00e7\u00e3o do usu\u00e1rio <code>cloud</code> e do banco de dados <code>tasks</code>.</li> <li>Configura\u00e7\u00e3o dos arquivos <code>postgresql.conf</code> e <code>pg_hba.conf</code> para permitir conex\u00f5es remotas.</li> <li>Libera\u00e7\u00e3o da porta 5432 no firewall.</li> </ul>"},{"location":"roteiro1/main/#aplicacao-django-server2","title":"Aplica\u00e7\u00e3o Django (server2):","text":"<ul> <li>Provisionamento da m\u00e1quina <code>server2</code> via MAAS.</li> <li>Clone do reposit\u00f3rio da aplica\u00e7\u00e3o:</li> </ul> git clone https://github.com/raulikeda/tasks.git <ul> <li>Execu\u00e7\u00e3o do script de instala\u00e7\u00e3o:</li> </ul> cd tasks./install.shreboot <ul> <li>Cria\u00e7\u00e3o de um t\u00fanel SSH para redirecionar a porta 8080 da aplica\u00e7\u00e3o para a m\u00e1quina local:</li> </ul> ssh cloud@&lt;ip-main&gt; -L 8001:&lt;ip-server2&gt;:8080 <ul> <li>Acesso ao Django Admin pelo navegador atrav\u00e9s do endere\u00e7o:</li> </ul> <p>http://localhost:8001/admin/</p>"},{"location":"roteiro1/main/#tarefa-4-deploy-automatizado-com-ansible","title":"Tarefa 4 - Deploy Automatizado com Ansible","text":"<ol> <li> <p>Implanta\u00e7\u00e3o do <code>server3</code> via MAAS. </p> </li> <li> <p>Utiliza\u00e7\u00e3o do Ansible para automa\u00e7\u00e3o do deploy da aplica\u00e7\u00e3o.</p> </li> <li> <p>Valida\u00e7\u00e3o do acesso ao Django Admin no <code>server2</code>. </p> </li> <li> <p>Valida\u00e7\u00e3o do acesso ao Django Admin no <code>server3</code>. </p> </li> </ol>"},{"location":"roteiro1/main/#tarefa-5-proxy-reverso-com-nginx","title":"Tarefa 5 - Proxy Reverso com Nginx","text":"<ol> <li> <p>Implanta\u00e7\u00e3o do <code>server4</code> via MAAS. </p> </li> <li> <p>Configura\u00e7\u00e3o do Nginx como proxy reverso para balanceamento de carga.</p> </li> <li> <p>Modifica\u00e7\u00e3o da resposta da aplica\u00e7\u00e3o para diferenciar <code>server2</code> e <code>server3</code>.</p> </li> <li> <p>Teste do Nginx redirecionando para <code>server2</code>. </p> </li> <li> <p>Teste do Nginx redirecionando para <code>server3</code>. </p> </li> </ol>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<ul> <li>Dificuldades:</li> <li>Configura\u00e7\u00e3o do MaaS CLI para deploy das m\u00e1quinas.</li> <li>Entendimento da configura\u00e7\u00e3o do proxy reverso com Nginx.</li> <li> <p>Automa\u00e7\u00e3o do deploy usando Ansible.</p> </li> <li> <p>Facilidades:</p> </li> <li>Instala\u00e7\u00e3o do banco de dados PostgreSQL.</li> <li>Uso de tunelamento SSH para acessar o Django admin.</li> </ul>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":"<p>Este roteiro demonstrou a import\u00e2ncia da automa\u00e7\u00e3o na implanta\u00e7\u00e3o de aplica\u00e7\u00f5es em infraestrutura bare-metal. O uso do MaaS facilitou a orquestra\u00e7\u00e3o das m\u00e1quinas, enquanto o Ansible permitiu a padroniza\u00e7\u00e3o e automa\u00e7\u00e3o do deploy. O proxy reverso com Nginx garantiu alta disponibilidade e balanceamento de carga, tornando o sistema mais robusto e escal\u00e1vel.</p> <p>Agora o relat\u00f3rio est\u00e1 formatado exatamente como voc\u00ea queria! Se precisar de mais ajustes, s\u00f3 avisar. \ud83d\ude80\ud83d\ude03</p>"}]}