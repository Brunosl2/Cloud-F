{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computa\u00e7\u00e3o em Nuvem","text":"Edi\u00e7\u00e3o <p>2025.1</p>"},{"location":"#kit-f","title":"KIT-F","text":"<p>Bruno Locatelli</p> <p>Julia Diniz</p>"},{"location":"#entregas","title":"Entregas","text":"<ul> <li> Roteiro 1 - Data 18/03/2025</li> <li> Roteiro 2 - Data 11/04/2025</li> <li> Roteiro 3</li> <li> Roteiro 4</li> <li> Projeto</li> </ul>"},{"location":"#referencias","title":"Refer\u00eancias","text":"<p>Material for MkDocs</p>"},{"location":"roteiro1/main/","title":"Roteiro 1 - Deploy de Django em Nuvem Bare-Metal","text":""},{"location":"roteiro1/main/#objetivo","title":"Objetivo","text":"<p>O objetivo deste roteiro \u00e9 aprender a configurar e gerenciar uma aplica\u00e7\u00e3o Django rodando em infraestrutura bare-metal utilizando o MaaS (Metal as a Service). O roteiro aborda desde a instala\u00e7\u00e3o manual do banco de dados e da aplica\u00e7\u00e3o Django at\u00e9 a automa\u00e7\u00e3o do deploy utilizando o Ansible e a configura\u00e7\u00e3o de um proxy reverso para balanceamento de carga.</p>"},{"location":"roteiro1/main/#criacao-da-infraestrutura-nuvem-bare-metal","title":"Cria\u00e7\u00e3o da Infraestrutura (Nuvem Bare-metal)","text":"<p>Nesta etapa inicial do projeto, foi realizada a cria\u00e7\u00e3o da infraestrutura da nuvem bare-metal utilizando o MAAS (Metal as a Service). Todo o ambiente foi montado em servidores f\u00edsicos (NUCs), com o objetivo de realizar o provisionamento autom\u00e1tico das m\u00e1quinas atrav\u00e9s de um servidor principal chamado <code>main</code>.</p> <p>O processo iniciou com a instala\u00e7\u00e3o do Ubuntu Server 22.04 LTS no <code>main</code>, onde foram realizadas as configura\u00e7\u00f5es b\u00e1sicas de rede, hostname e DNS. Ap\u00f3s isso, foi instalado o MAAS vers\u00e3o 3.5.3, respons\u00e1vel pelo gerenciamento dos recursos f\u00edsicos da nuvem. Com o MAAS instalado e configurado, foi poss\u00edvel acessar o dashboard web da ferramenta e realizar a importa\u00e7\u00e3o das imagens do Ubuntu que seriam utilizadas posteriormente no deploy das m\u00e1quinas.</p> <p>Al\u00e9m disso, foi feita a configura\u00e7\u00e3o do DHCP e DNS atrav\u00e9s do pr\u00f3prio MAAS, desabilitando o DHCP do roteador do kit e garantindo que o MAAS tivesse controle total sobre a atribui\u00e7\u00e3o de IPs das m\u00e1quinas. Tamb\u00e9m foram cadastrados e comissionados os servidores <code>server1</code> at\u00e9 <code>server5</code>, configurando o Power Type como Intel AMT e realizando o boot via PXE. </p> <p>Por fim, foi criada uma bridge OVS (<code>br-ex</code>) nas m\u00e1quinas, com o objetivo de facilitar a comunica\u00e7\u00e3o entre as VMs e os servi\u00e7os de rede, e foi realizado o acesso remoto ao ambiente atrav\u00e9s de NAT, possibilitando o gerenciamento do kit a partir de redes externas como o Wi-Fi do Insper.</p>"},{"location":"roteiro1/main/#tarefa-1-banco-de-dados-postgresql","title":"Tarefa 1 - Banco de Dados PostgreSQL","text":"<ul> <li> <p>Implanta\u00e7\u00e3o do Ubuntu 22.04 no <code>server1</code> via MAAS.</p> </li> <li> <p>Instala\u00e7\u00e3o do PostgreSQL e configura\u00e7\u00e3o para aceitar conex\u00f5es remotas.</p> </li> </ul>"},{"location":"roteiro1/main/#1-para-verificar-se-o-postgresql-esta-rodando-corretamente-utilizamos-o-comando","title":"1. Para verificar se o PostgreSQL est\u00e1 rodando corretamente, utilizamos o comando:","text":"systemctl status postgresql <p>Imagem 1 - Verifica\u00e7\u00e3o do status do PostgreSQL via systemctl. </p>"},{"location":"roteiro1/main/#2-para-garantir-que-o-banco-de-dados-esta-acessivel-na-propria-maquina-utilizamos","title":"2. Para garantir que o banco de dados est\u00e1 acess\u00edvel na pr\u00f3pria m\u00e1quina, utilizamos:","text":"telnet localhost 5432ifconfigufw allow 5432/tcpjournalctl -u postgresql <ul> <li><code>telnet localhost 5432</code>: verifica se a porta est\u00e1 respondendo localmente</li> <li><code>ifconfig</code>: confirma o IP atribu\u00eddo \u00e0 interface de rede da m\u00e1quina.</li> <li><code>ufw allow 5432/tcp</code>: identifica o IP da interface de rede.</li> <li><code>journalctl -u postgresql</code>: mostra os logs do servi\u00e7o PostgreSQL.</li> </ul> <p>Imagem 2 - Teste de conex\u00e3o local ao PostgreSQL.</p>"},{"location":"roteiro1/main/#3-para-validar-o-acesso-a-partir-da-maquina-main","title":"3. Para validar o acesso a partir da m\u00e1quina MAIN:","text":"telnet &lt;ip-do-server1&gt; 5432curl &lt;ip-do-server1&gt;:5432wget &lt;ip-do-server1&gt;:5432 <ul> <li><code>telnet &lt;ip-do-server1&gt; 5432</code>: verifica se \u00e9 poss\u00edvel se conectar ao banco remotamente a partir de outra m\u00e1quina.</li> <li><code>curl &lt;ip-do-server1&gt;:5432</code> ou <code>wget &lt;ip-do-server1&gt;:5432</code>: podem ser usados para verificar se h\u00e1 alguma resposta na porta TCP 5432, embora n\u00e3o sejam ideais para testar servi\u00e7os PostgreSQL, pois esse protocolo n\u00e3o responde como HTTP.</li> </ul> <p>Imagem 3 - Teste de acesso remoto ao PostgreSQL.</p>"},{"location":"roteiro1/main/#4-por-fim-para-saber-em-qual-porta-o-postgresql-esta-escutando","title":"4. Por fim, para saber em qual porta o PostgreSQL est\u00e1 escutando:","text":"ss -tlpn | grep postgres <ul> <li><code>ss -tlpn | grep postgres</code>: mostra as portas TCP abertas, os processos escutando e confirma que o PostgreSQL est\u00e1 ouvindo na porta 5432.</li> </ul> <p>Imagem 4 - Verifica\u00e7\u00e3o da porta utilizada pelo PostgreSQL.</p>"},{"location":"roteiro1/main/#tarefa-2-dashboard-do-maas-e-testes-nas-maquinas","title":"Tarefa 2 - Dashboard do MAAS e Testes nas M\u00e1quinas","text":"<p>Nesta etapa realizamos a verifica\u00e7\u00e3o do ambiente no MAAS, observando as m\u00e1quinas dispon\u00edveis, imagens sincronizadas e os testes de hardware realizados em cada m\u00e1quina.</p>"},{"location":"roteiro1/main/#1-visualizacao-do-dashboard-do-maas","title":"1. Visualiza\u00e7\u00e3o do Dashboard do MAAS.","text":"<p>Atrav\u00e9s da interface web do MAAS, \u00e9 poss\u00edvel visualizar todas as m\u00e1quinas provisionadas e seus respectivos IPs.</p> <p></p> <p>Imagem 5 - Dashboard do MAAS exibindo as m\u00e1quinas configuradas.</p>"},{"location":"roteiro1/main/#2-verificacao-das-imagens-disponiveis","title":"2. Verifica\u00e7\u00e3o das imagens dispon\u00edveis.","text":"<p>No MAAS, as imagens sincronizadas ficam dispon\u00edveis para deploy nas m\u00e1quinas.</p> <p></p> <p>Imagem 6 - Imagens sincronizadas no MAAS.</p>"},{"location":"roteiro1/main/#3-verificacao-dos-testes-de-hardware-commissioning-em-cada-maquina","title":"3. Verifica\u00e7\u00e3o dos testes de hardware (Commissioning) em cada m\u00e1quina.","text":"<p>Em cada m\u00e1quina do MAAS foram realizados testes de hardware para garantir que est\u00e3o operando corretamente. O resultado desses testes pode ser visualizado individualmente.</p> <p>M\u00e1quina <code>server1</code>:</p> <p></p> <p>Imagem 7 - Testes de hardware com status OK na m\u00e1quina server1.</p> <p>M\u00e1quina <code>server2</code>:</p> <p></p> <p>Imagem 8 - Testes de hardware com status OK na m\u00e1quina server2.</p> <p>M\u00e1quina <code>server3</code>:</p> <p></p> <p>Imagem 9 - Testes de hardware com status OK na m\u00e1quina server3.</p> <p>M\u00e1quina <code>server4</code>:</p> <p></p> <p>Imagem 10 - Testes de hardware com status OK na m\u00e1quina server4.</p> <p>M\u00e1quina <code>server5</code>:</p> <p></p> <p>Imagem 11 - Testes de hardware com status OK na m\u00e1quina server5.</p>"},{"location":"roteiro1/main/#tarefa-3-deploy-manual-da-aplicacao-django","title":"Tarefa 3 - Deploy Manual da Aplica\u00e7\u00e3o Django","text":"<p>Nesta tarefa foi realizado o deploy manual da aplica\u00e7\u00e3o Django em uma m\u00e1quina <code>server2</code> provisionada no MAAS, utilizando o banco de dados PostgreSQL previamente instalado no <code>server1</code>.</p>"},{"location":"roteiro1/main/#1-visualizacao-do-dashboard-do-maas-com-as-maquinas-server1-e-server2","title":"1. Visualiza\u00e7\u00e3o do Dashboard do MAAS com as m\u00e1quinas <code>server1</code> e <code>server2</code>.","text":"<p>No Dashboard do MAAS \u00e9 poss\u00edvel visualizar as duas m\u00e1quinas (<code>server1</code> e <code>server2</code>) ativas e com seus respectivos IPs atribu\u00eddos.</p> <p></p> <p>Imagem 12 - Dashboard do MAAS com as m\u00e1quinas server1 e server2 configuradas.</p>"},{"location":"roteiro1/main/#2-teste-de-acesso-a-aplicacao-django-no-server2","title":"2. Teste de acesso \u00e0 aplica\u00e7\u00e3o Django no <code>server2</code>.","text":"<p>Ap\u00f3s o deploy manual da aplica\u00e7\u00e3o, foi realizado o acesso ao Django Admin para comprovar o funcionamento correto da aplica\u00e7\u00e3o rodando no <code>server2</code>.</p> <p></p> <p>Imagem 13 - Acesso ao painel Django Admin da aplica\u00e7\u00e3o no server2.</p>"},{"location":"roteiro1/main/#3-implementacao-manual-da-aplicacao-django-e-banco-de-dados","title":"3. Implementa\u00e7\u00e3o manual da aplica\u00e7\u00e3o Django e banco de dados.","text":"<p>O processo de implementa\u00e7\u00e3o manual foi realizado em duas etapas:</p>"},{"location":"roteiro1/main/#banco-de-dados-server1","title":"Banco de Dados (server1):","text":"<ul> <li>Instala\u00e7\u00e3o do PostgreSQL.</li> <li>Cria\u00e7\u00e3o do usu\u00e1rio <code>cloud</code> e do banco de dados <code>tasks</code>.</li> <li>Configura\u00e7\u00e3o dos arquivos <code>postgresql.conf</code> e <code>pg_hba.conf</code> para permitir conex\u00f5es remotas.</li> <li>Libera\u00e7\u00e3o da porta 5432 no firewall.</li> </ul>"},{"location":"roteiro1/main/#aplicacao-django-server2","title":"Aplica\u00e7\u00e3o Django (server2):","text":"<ul> <li>Provisionamento da m\u00e1quina <code>server2</code> via MAAS.</li> <li>Clone do reposit\u00f3rio da aplica\u00e7\u00e3o:</li> </ul> git clone https://github.com/raulikeda/tasks.git <ul> <li>Execu\u00e7\u00e3o do script de instala\u00e7\u00e3o:</li> </ul> cd tasks./install.shreboot <ul> <li>Cria\u00e7\u00e3o de um t\u00fanel SSH para redirecionar a porta 8080 da aplica\u00e7\u00e3o para a m\u00e1quina local:</li> </ul> ssh cloud@&lt;ip-main&gt; -L 8001:&lt;ip-server2&gt;:8080 <ul> <li>Acesso ao Django Admin pelo navegador atrav\u00e9s do endere\u00e7o:</li> </ul> <p>http://localhost:8001/admin/</p>"},{"location":"roteiro1/main/#tarefa-4-deploy-automatizado-da-aplicacao-django-com-ansible","title":"Tarefa 4 - Deploy Automatizado da Aplica\u00e7\u00e3o Django com Ansible","text":"<p>Nesta tarefa foi realizado o deploy automatizado da aplica\u00e7\u00e3o Django em uma nova m\u00e1quina <code>server3</code>, utilizando a ferramenta Ansible. O objetivo foi demonstrar a diferen\u00e7a entre o deploy manual e o automatizado.</p>"},{"location":"roteiro1/main/#1-visualizacao-do-dashboard-do-maas-com-as-maquinas-server1-server2-e-server3","title":"1. Visualiza\u00e7\u00e3o do Dashboard do MAAS com as m\u00e1quinas <code>server1</code>, <code>server2</code> e <code>server3</code>.","text":"<p>No Dashboard do MAAS \u00e9 poss\u00edvel visualizar as tr\u00eas m\u00e1quinas ativas com seus respectivos IPs atribu\u00eddos.</p> <p></p> <p>Imagem 14 - Dashboard do MAAS com as m\u00e1quinas server1, server2 e server3 configuradas.</p>"},{"location":"roteiro1/main/#2-teste-de-acesso-a-aplicacao-django-no-server2_1","title":"2. Teste de acesso \u00e0 aplica\u00e7\u00e3o Django no <code>server2</code>.","text":"<p>Foi realizado o acesso ao Django Admin no <code>server2</code> para comprovar o funcionamento da aplica\u00e7\u00e3o ap\u00f3s o deploy.</p> <p></p> <p>Imagem 15 - Acesso ao painel Django Admin da aplica\u00e7\u00e3o no server2.</p>"},{"location":"roteiro1/main/#3-teste-de-acesso-a-aplicacao-django-no-server3","title":"3. Teste de acesso \u00e0 aplica\u00e7\u00e3o Django no <code>server3</code>.","text":"<p>Ap\u00f3s o deploy automatizado com Ansible, foi realizado o acesso ao Django Admin no <code>server3</code> para comprovar o funcionamento correto da aplica\u00e7\u00e3o.</p> <p></p> <p>Imagem 16 - Acesso ao painel Django Admin da aplica\u00e7\u00e3o no server3.</p>"},{"location":"roteiro1/main/#4-diferenca-entre-instalar-manualmente-a-aplicacao-django-e-utilizando-o-ansible","title":"4. Diferen\u00e7a entre instalar manualmente a aplica\u00e7\u00e3o Django e utilizando o Ansible.","text":"<p>A instala\u00e7\u00e3o manual da aplica\u00e7\u00e3o Django requer que todos os passos sejam realizados diretamente no terminal da m\u00e1quina alvo. Isso inclui:</p> <ul> <li>Instala\u00e7\u00e3o de depend\u00eancias.</li> <li>Clone do reposit\u00f3rio da aplica\u00e7\u00e3o.</li> <li>Execu\u00e7\u00e3o de scripts de instala\u00e7\u00e3o.</li> <li>Configura\u00e7\u00f5es manuais.</li> </ul> <p>Esse processo \u00e9 mais trabalhoso, demorado e sujeito a erros humanos, principalmente em ambientes com m\u00faltiplas m\u00e1quinas.</p> <p>Por outro lado, com o uso do Ansible o processo de instala\u00e7\u00e3o e configura\u00e7\u00e3o da aplica\u00e7\u00e3o \u00e9 automatizado e padronizado. As principais vantagens do Ansible s\u00e3o:</p> <ul> <li>Execu\u00e7\u00e3o remota e automatizada em diversas m\u00e1quinas.</li> <li>Repetibilidade dos procedimentos (idempot\u00eancia).</li> <li>Facilidade de manuten\u00e7\u00e3o e escalabilidade.</li> <li>Redu\u00e7\u00e3o de erros manuais.</li> </ul> <p>Dessa forma, o deploy com Ansible se mostra muito mais eficiente e pr\u00e1tico para ambientes com m\u00faltiplos servidores.</p>"},{"location":"roteiro1/main/#tarefa-5-proxy-reverso-com-nginx-load-balancer","title":"Tarefa 5 - Proxy Reverso com NGINX (Load Balancer)","text":"<p>Nesta tarefa foi realizada a configura\u00e7\u00e3o de um proxy reverso utilizando o NGINX na m\u00e1quina <code>server4</code>. O objetivo foi criar um ponto \u00fanico de acesso para a aplica\u00e7\u00e3o Django, realizando o balanceamento de carga entre <code>server2</code> e <code>server3</code>.</p>"},{"location":"roteiro1/main/#1-visualizacao-do-dashboard-do-maas-com-as-maquinas-server1-server2-server3-e-server4","title":"1. Visualiza\u00e7\u00e3o do Dashboard do MAAS com as m\u00e1quinas <code>server1</code>, <code>server2</code>, <code>server3</code> e <code>server4</code>.","text":"<p>No Dashboard do MAAS \u00e9 poss\u00edvel visualizar as quatro m\u00e1quinas ativas e com seus respectivos IPs atribu\u00eddos.</p> <p></p> <p>Imagem 17 - Dashboard do MAAS com as m\u00e1quinas server1, server2, server3 e server4 configuradas.</p>"},{"location":"roteiro1/main/#2-modificacao-do-conteudo-da-funcao-index-do-arquivo-tasksviewspy","title":"2. Modifica\u00e7\u00e3o do conte\u00fado da fun\u00e7\u00e3o <code>index</code> do arquivo <code>tasks/views.py</code>.","text":"<p>Foi alterada a mensagem da fun\u00e7\u00e3o <code>index</code> da aplica\u00e7\u00e3o Django em cada servidor (<code>server2</code> e <code>server3</code>) com o objetivo de identificar visualmente em qual servidor a requisi\u00e7\u00e3o foi processada.</p> <p>Exemplo do conte\u00fado do <code>views.py</code> em <code>server2</code>:</p> def index(request):    return HttpResponse(\"Voc\u00ea est\u00e1 conectado ao server2\") <p>Exemplo do conte\u00fado do <code>views.py</code> em <code>server3</code>:</p> def index(request):    return HttpResponse(\"Voc\u00ea est\u00e1 conectado ao server3\")"},{"location":"roteiro1/main/#3-teste-de-requisicoes-get-via-nginx-proxy-reverso","title":"3. Teste de requisi\u00e7\u00f5es GET via NGINX (Proxy Reverso).","text":"<p>Foi realizado um <code>GET request</code> no endere\u00e7o do <code>server4</code> (Proxy Reverso) configurado com o NGINX para balancear o acesso entre os servers <code>server2</code> e <code>server3</code>.</p> <p>A cada requisi\u00e7\u00e3o, o NGINX direcionou a resposta de forma alternada, validando o funcionamento do balanceamento de carga.</p> <p>Primeira requisi\u00e7\u00e3o retornando resposta do <code>server2</code>:</p> <p></p> <p>Imagem 18 - Resposta do Proxy Reverso redirecionando para o server2.</p> <p>Segunda requisi\u00e7\u00e3o retornando resposta do <code>server3</code>:</p> <p></p> <p>Imagem 19 - Resposta do Proxy Reverso redirecionando para o server3.</p>"},{"location":"roteiro1/main/#discussoes","title":"Discuss\u00f5es","text":"<p>Durante o desenvolvimento do roteiro, a parte mais dif\u00edcil foi, sem d\u00favida, a configura\u00e7\u00e3o inicial do MAAS e o comissionamento das m\u00e1quinas. Tivemos alguns problemas principalmente com a parte de rede, como o DHCP e o roteamento dos pacotes, o que exigiu bastante paci\u00eancia, aten\u00e7\u00e3o aos detalhes e pesquisa na documenta\u00e7\u00e3o.</p> <p>Outro ponto que deu um pouco de trabalho foi a cria\u00e7\u00e3o da bridge OVS nas m\u00e1quinas, j\u00e1 que era preciso configurar tudo certinho para garantir que a comunica\u00e7\u00e3o entre os servidores funcionasse como esperado.</p> <p>Por outro lado, a parte mais tranquila foi a instala\u00e7\u00e3o do PostgreSQL e da aplica\u00e7\u00e3o Django de forma manual, j\u00e1 que os passos eram bem claros e seguiam um padr\u00e3o conhecido.</p> <p>J\u00e1 o deploy com Ansible foi algo novo e que trouxe um certo desafio no in\u00edcio, principalmente para entender a l\u00f3gica dos playbooks e como o processo de automa\u00e7\u00e3o funcionava. Mas depois que tudo ficou configurado corretamente, o Ansible se mostrou uma ferramenta muito pr\u00e1tica e eficiente, facilitando bastante o deploy em m\u00faltiplos servidores.</p>"},{"location":"roteiro1/main/#conclusao","title":"Conclus\u00e3o","text":""},{"location":"roteiro1/main/#conclusao_1","title":"Conclus\u00e3o","text":""},{"location":"roteiro1/main/#conclusao_2","title":"Conclus\u00e3o","text":"<p>A realiza\u00e7\u00e3o deste roteiro foi essencial para colocar em pr\u00e1tica tudo que aprendemos sobre infraestrutura bare-metal e o uso do MAAS. Foi um processo bem completo, que come\u00e7ou desde a instala\u00e7\u00e3o do sistema operacional Ubuntu at\u00e9 o deploy final da aplica\u00e7\u00e3o Django funcionando em um ambiente distribu\u00eddo.</p> <p>No come\u00e7o, passamos por toda a parte de configura\u00e7\u00e3o da nuvem, preparando o MAAS, criando a bridge OVS e cadastrando os servidores. Essa etapa foi importante para garantir que tudo estivesse pronto e funcionando para os pr\u00f3ximos passos.</p> <p>Depois, fizemos o deploy manual do banco de dados PostgreSQL e da aplica\u00e7\u00e3o Django, o que ajudou bastante a entender melhor o funcionamento de cada parte da infraestrutura. Na sequ\u00eancia, usamos o Ansible para automatizar esse processo, o que deixou tudo muito mais r\u00e1pido, f\u00e1cil e padronizado.</p> <p>Por fim, configuramos o NGINX como proxy reverso, criando um ponto \u00fanico de acesso para a aplica\u00e7\u00e3o e implementando o balanceamento de carga entre os servidores, deixando o ambiente com uma cara mais pr\u00f3xima de produ\u00e7\u00e3o.</p> <p>No geral, o roteiro foi muito importante para ter uma vis\u00e3o pr\u00e1tica e completa de como funciona o ciclo de vida de um ambiente em nuvem bare-metal, desde a sua cria\u00e7\u00e3o at\u00e9 a entrega de uma aplica\u00e7\u00e3o funcionando de forma automatizada e eficiente.</p>"},{"location":"roteiro2/main/","title":"Roteiro 2 - Deployment Orchestration com Juju","text":""},{"location":"roteiro2/main/#objetivos","title":"Objetivos","text":"<p>Este roteiro teve como objetivo:</p> <ul> <li>Entender os conceitos b\u00e1sicos sobre uma plataforma de gerenciamento de aplica\u00e7\u00f5es distribu\u00eddas.</li> <li>Utilizar o Juju para orquestra\u00e7\u00e3o de aplica\u00e7\u00f5es sobre infraestrutura Bare Metal.</li> <li>Realizar o deploy de aplica\u00e7\u00f5es utilizando charms do Juju.</li> <li>Integrar o Grafana com o Prometheus e validar o funcionamento.</li> </ul>"},{"location":"roteiro2/main/#infraestrutura-utilizada","title":"Infraestrutura Utilizada","text":"<p>Para este roteiro, utilizamos a infraestrutura provisionada previamente no MAAS (Bare Metal), com as seguintes m\u00e1quinas dispon\u00edveis:</p> <ul> <li>server1</li> <li>server2</li> <li>server3</li> <li>server4</li> <li>server5</li> </ul> <p>Antes de iniciar o deploy, verificamos se todas as m\u00e1quinas estavam com status Ready no MAAS. Caso alguma m\u00e1quina estivesse alocada, foi realizado o release.</p>"},{"location":"roteiro2/main/#instalacao-do-juju","title":"Instala\u00e7\u00e3o do Juju","text":"<p>A instala\u00e7\u00e3o do Juju foi feita na m\u00e1quina main via SSH.</p> <p>$ sudo snap install juju --channel 3.6</p>"},{"location":"roteiro2/main/#deploy-do-dashboard-do-juju","title":"Deploy do Dashboard do Juju","text":"<p>O Dashboard do Juju foi instalado conforme documenta\u00e7\u00e3o oficial.</p> <p>$ juju dashboard</p> <p>Ap\u00f3s a instala\u00e7\u00e3o, o Dashboard foi acessado via navegador no endere\u00e7o:</p> <p>http://IP-da-main:17070/</p>"},{"location":"roteiro2/main/#deploy-do-grafana-e-prometheus","title":"Deploy do Grafana e Prometheus","text":"<p>Foi criada a pasta charms e feito o download dos charms do charmhub.</p> <p>$ mkdir -p /home/cloud/charms $ cd /home/cloud/charms $ juju download grafana $ juju download prometheus2</p> <p>Em seguida, realizamos o deploy dos charms baixados.</p> <p>$ juju deploy ./prometheus2_.charm $ juju deploy ./grafana_.charm</p> <p>Para acompanhar o deploy:</p> <p>$ watch -n 1 juju status</p>"},{"location":"roteiro2/main/#integracao-grafana-com-prometheus","title":"Integra\u00e7\u00e3o Grafana com Prometheus","text":"<p>A integra\u00e7\u00e3o foi realizada via Juju, utilizando a funcionalidade integrate.</p> <p>$ juju integrate grafana prometheus2</p> <p>Ap\u00f3s isso, o Dashboard do Grafana foi acessado via navegador. Foi criada uma visualiza\u00e7\u00e3o com o Prometheus como source.</p>"},{"location":"roteiro2/main/#evidencias","title":"Evid\u00eancias","text":""},{"location":"roteiro2/main/#1-dashboard-do-maas-com-maquinas-e-ips","title":"1 - Dashboard do MAAS com m\u00e1quinas e IPs","text":"<p>Imagem 1 - Dashboard MAAS</p>"},{"location":"roteiro2/main/#2-status-do-juju-apos-deploy-do-grafana","title":"2 - Status do Juju ap\u00f3s deploy do Grafana","text":"<p>Imagem 2 - Juju Status</p>"},{"location":"roteiro3/main/","title":"Roteiro 3 - OpenStack","text":""},{"location":"roteiro3/main/#setup","title":"Setup","text":""},{"location":"roteiro3/main/#autenticacao-e-dashboard","title":"Autentica\u00e7\u00e3o e Dashboard","text":"<ul> <li>Arquivo <code>openrc</code> criado com as credenciais de acesso ao OpenStack.</li> <li>Acesso ao Horizon realizado com sucesso via <code>admin_domain</code>.</li> <li>Dashboard mantido aberto durante toda a configura\u00e7\u00e3o.</li> </ul>"},{"location":"roteiro3/main/#tarefa-1","title":"Tarefa 1","text":""},{"location":"roteiro3/main/#status-do-juju","title":"Status do Juju","text":"<p>Status do ambiente Juju ap\u00f3s bootstrap e deploy.</p>"},{"location":"roteiro3/main/#dashboard-do-maas-com-as-maquinas","title":"Dashboard do MAAS com as m\u00e1quinas","text":"<p>Exibi\u00e7\u00e3o das m\u00e1quinas dispon\u00edveis no ambiente MAAS.</p>"},{"location":"roteiro3/main/#aba-compute-overview-no-openstack","title":"Aba Compute Overview no OpenStack","text":"<p>Vis\u00e3o geral de uso de recursos computacionais no OpenStack.</p>"},{"location":"roteiro3/main/#aba-compute-instances-no-openstack","title":"Aba Compute Instances no OpenStack","text":"<p>Inst\u00e2ncias criadas at\u00e9 o momento via Horizon.</p>"},{"location":"roteiro3/main/#topologia-da-rede","title":"Topologia da Rede","text":"<p>Conex\u00f5es entre redes interna, externa e inst\u00e2ncias.</p>"},{"location":"roteiro3/main/#imagens-e-flavors","title":"Imagens e Flavors","text":"<ul> <li>Cliente OpenStack instalado via Snap.</li> <li>Credenciais carregadas com <code>source openrc</code>.</li> <li>Servi\u00e7os verificados com <code>openstack service list</code>.</li> <li>Ajustes na rede:   <pre><code>juju config neutron-api enable-ml2-dns=\"true\"\njuju config neutron-api-plugin-ovn dns-servers=\"172.16.0.1\"\n</code></pre></li> <li>Imagem Ubuntu Jammy importada no Glance.</li> <li>Flavors criados:   <pre><code>m1.tiny    1 vCPU   1 GB RAM   20 GB Disk\nm1.small   1 vCPU   2 GB RAM   20 GB Disk\nm1.medium  2 vCPU   4 GB RAM   20 GB Disk\nm1.large   4 vCPU   8 GB RAM   20 GB Disk\n</code></pre></li> </ul>"},{"location":"roteiro3/main/#rede-externa","title":"Rede Externa","text":"<ul> <li>Faixa: <code>172.16.7.0/23</code></li> <li>Criada rede externa <code>external_net</code>.</li> </ul>"},{"location":"roteiro3/main/#rede-interna-e-roteador","title":"Rede Interna e Roteador","text":"<ul> <li>Subnet: <code>192.169.0.0/24</code></li> <li>Criada rede interna <code>internal_net</code>.</li> <li>Roteador conectado \u00e0 rede externa.</li> </ul>"},{"location":"roteiro3/main/#conexao","title":"Conex\u00e3o","text":"<ul> <li>Par de chaves importado com <code>id_rsa.pub</code> da m\u00e1quina main.</li> <li>Grupo de seguran\u00e7a atualizado com SSH e ICMP liberados.</li> <li>Topologia da rede validada conforme projeto da infraestrutura.</li> </ul>"},{"location":"roteiro3/main/#instancia-inicial","title":"Inst\u00e2ncia Inicial","text":"<ul> <li>Inst\u00e2ncia <code>client</code> disparada com flavor <code>m1.tiny</code>, sem volume.</li> <li>IP flutuante alocado e conectado com sucesso via SSH.</li> </ul>"},{"location":"roteiro3/main/#tarefa-2","title":"Tarefa 2","text":""},{"location":"roteiro3/main/#dashboard-do-maas-atualizado","title":"Dashboard do MAAS atualizado","text":"<p>Estado atualizado do MAAS ap\u00f3s aloca\u00e7\u00e3o de novas m\u00e1quinas.</p>"},{"location":"roteiro3/main/#compute-overview-com-novas-instancias","title":"Compute Overview com novas inst\u00e2ncias","text":"<p>Vis\u00e3o geral do uso de recursos ap\u00f3s escalonamento de inst\u00e2ncias.</p>"},{"location":"roteiro3/main/#compute-instances-atualizada","title":"Compute Instances atualizada","text":"<p>Lista de todas as inst\u00e2ncias em execu\u00e7\u00e3o com seus IPs e status.</p>"},{"location":"roteiro3/main/#topologia-de-rede-atualizada","title":"Topologia de rede atualizada","text":"<p>Atualiza\u00e7\u00e3o da topologia ap\u00f3s cria\u00e7\u00e3o de m\u00faltiplas inst\u00e2ncias.</p>"},{"location":"roteiro3/main/#diferencas-entre-tarefa-1-e-tarefa-2","title":"Diferen\u00e7as entre Tarefa 1 e Tarefa 2","text":"<ul> <li>Tarefa 2 inclui inst\u00e2ncias <code>db</code>, <code>api1</code>, <code>api2</code> e <code>lb</code>.</li> <li>Aloca\u00e7\u00e3o de m\u00e1quinas novas (nodes 3 e 4).</li> <li>Rede apresenta mais conex\u00f5es na topologia.</li> </ul>"},{"location":"roteiro3/main/#como-os-recursos-foram-criados","title":"Como os recursos foram criados","text":"<ul> <li>Inst\u00e2ncias criadas via Horizon, com flavors definidos.</li> <li>IPs internos e flutuantes alocados automaticamente.</li> <li>Atribui\u00e7\u00e3o autom\u00e1tica dos hosts vis\u00edvel no detalhe das inst\u00e2ncias.</li> </ul>"},{"location":"roteiro3/main/#escalando-os-nos","title":"Escalando os N\u00f3s","text":"<ul> <li>Verifica\u00e7\u00e3o de m\u00e1quina <code>ALLOCATED</code> no MAAS para adicionar ao cluster.</li> <li>Comandos:   <pre><code>juju add-unit nova-compute\njuju add-unit --to &lt;machine-id&gt; ceph-osd\n</code></pre></li> <li>Nova m\u00e1quina adicionada como n\u00f3 de c\u00e1lculo e armazenamento.</li> </ul>"},{"location":"roteiro3/main/#app","title":"App","text":""},{"location":"roteiro3/main/#tarefa-3","title":"Tarefa 3","text":""},{"location":"roteiro3/main/#arquitetura-da-rede","title":"Arquitetura da Rede","text":"<p>(Diagrama pendente)</p> <ul> <li>Rede <code>192.169.0.0/24</code>: interna</li> <li>Rede <code>172.16.0.0/20</code>: externa (aloca\u00e7\u00e3o de floating IPs)</li> <li>Inst\u00e2ncias:</li> <li><code>client</code></li> <li><code>lb</code> (load balancer NGINX)</li> <li><code>api1</code> e <code>api2</code></li> <li><code>db</code></li> </ul>"},{"location":"roteiro3/main/#tarefa-4","title":"Tarefa 4","text":""},{"location":"roteiro3/main/#execucao-do-fastapi","title":"Execu\u00e7\u00e3o do FastAPI","text":"<p>Lista final de inst\u00e2ncias rodando a aplica\u00e7\u00e3o.</p>"},{"location":"roteiro3/main/#alocacao-de-instancias","title":"Aloca\u00e7\u00e3o de Inst\u00e2ncias","text":"<p>Inst\u00e2ncia <code>db</code> alocada no host f\u00edsico <code>node4.maas</code>.</p> <p> </p> <p>Inst\u00e2ncia <code>api1</code> alocada no host f\u00edsico <code>node3.maas</code>.</p> <p> </p> <p>Inst\u00e2ncia <code>api2</code> alocada no host f\u00edsico <code>node4.maas</code>.</p> <p> </p> <p>Inst\u00e2ncia <code>lb</code> alocada no host f\u00edsico <code>node5.maas</code>.</p>"},{"location":"roteiro3/main/#topologia","title":"Topologia","text":"<p>Representa\u00e7\u00e3o das redes <code>external_net</code>, <code>internal_net</code> e <code>user_net</code>.</p> <p> </p> <p>Diagrama gr\u00e1fico da infraestrutura conectada ao gateway e VMs.</p>"},{"location":"roteiro3/main/#visao-geral","title":"Vis\u00e3o Geral","text":"<p>Painel de uso de recursos computacionais e de rede no Horizon.</p>"}]}